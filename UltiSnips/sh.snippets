snippet helloworld "A 'Hello world!' demo" b
#!/usr/bin/env ${1:bash}

echo "Hello world!"

endsnippet

snippet #! "File header" b
#!/usr/bin/env ${1:bash}

$0
endsnippet

snippet function "function block" b
function ${1:name} {
	${2:${VISUAL:# TODO: Implement the function.}}
}
$0
endsnippet

snippet if "`if` block" b
if [[ $1 ]]
then
	${2:${VISUAL:# TODO: if then...}}
fi
$0
endsnippet

snippet ife "`if else` block" b
if [[ $1 ]]
then
	${2:${VISUAL:# TODO: if then...}}
else
	${3:# TODO: else then...}
fi
$0
endsnippet

snippet ifi "`if elif` block" b
if [[ $1 ]]
then
	${2:${VISUAL:# TODO: if then...}}
elif [[ $3 ]]
then
	${4:# TODO: else if $3 then...}
fi
$0
endsnippet

snippet ifie "`if elif else` block" b
if [[ $1 ]]
then
	${2:${VISUAL:# TODO: if then...}}
elif [[ $3 ]]
then
	${4:# TODO: else if $3 then...}
else
	${5:# TODO: else then...}
fi
$0
endsnippet

snippet case "`case in` block" b
case $1 in
	${2:SOME | THING} )
		${3:echo TODO: case "$2"} ;;
	*)
		${4:echo TODO: Handle default situation.} ;;
esac
$0
endsnippet

snippet select "`select` block" b
select ${1:fname} in ${2:*}
do
	${3:echo you picked $fname \($REPLY\)}
	break;
done
$0
endsnippet

snippet until "`until` block" b
until [[ $1 ]]
do
	${2:${VISUAL:echo do sth until zero.}}
done
$0
endsnippet

snippet while "`while` block" b
while [[ $1 ]]
do
	${2:${VISUAL:echo do sth while zero.}}
done
$0
endsnippet

snippet for "`for` block" b
for ${1:\$file in *}
do
	${2:${VISUAL:echo do sth for some cases.}}
done
$0
endsnippet

snippet todo "Add a TODO" b
# TODO: ${1:Something to be done}, since `!v strftime("%Y-%m-%d")`
endsnippet

snippet fixme "Add a FIXME" b
# FIXME: ${1:Bug description}, since `!v strftime("%Y-%m-%d")`
endsnippet

snippet xxx "Add a XXX" b
# XXX: ${1:Something weird or unsure}, since `!v strftime("%Y-%m-%d")`
endsnippet

