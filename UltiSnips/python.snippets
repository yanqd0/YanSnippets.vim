snippet helloworld "A 'Hello world!' demo" b
#!/usr/bin/env python
# -*- coding:utf-8 -*-

if __name__ == '__main__':
	print "Hello world!"
endsnippet

snippet #! "File header" b
#!/usr/bin/env python
# -*- coding:utf-8 -*-

endsnippet

snippet main "The __main__ block" b
if __name__ == '__main__':
	${1:${VISUAL:# TODO: Do sth when executed.}}
endsnippet

# class
snippet class "A new class" b
class ${1:`!v expand("%:t:r")`}(${2:object}):
	def __init__(self):
		${3:# TODO: Override the constructor.}
endsnippet
###

# if
snippet if "`if` block" b
if $1:
	${2:${VISUAL:# TODO: if then...}}
$0
endsnippet

snippet ife "`if else` block" b
if $1:
	${2:${VISUAL:# TODO: if then...}}
else:
	${3:# TODO: else then...}
$0
endsnippet

snippet ifi "`if elif` block" b
if $1:
	${2:${VISUAL:# TODO: if then...}}
elif $3:
	${4:# TODO: else if $3 then...}
$0
endsnippet

snippet ifie "`if elif else` block" b
if $1:
	${2:${VISUAL:# TODO: if then...}}
elif $3:
	${4:# TODO: else if $3 then...}
else:
	${5:# TODO: else then...}
$0
endsnippet
###

# loop
snippet while "`while` block" b
while ${1:True}:
	${2:${VISUAL:# TODO: while do...}}
$0
endsnippet

snippet for "`for` block" b
for $1 in $2:
	${3:${VISUAL:# TODO: for...}}
$0
endsnippet
###

# try
snippet trye "`try except` block" b
try:
	${1:${VISUAL:# TODO: try block}}
except$2:
	${3:# TODO: Handle exceptions.}
$0
endsnippet

snippet tryf "`try finally` block" b
try:
	${1:${VISUAL:# TODO: try block}}
finally:
	${2:# TODO: Do something before leaving.}
$0
endsnippet

snippet tryef "`try catch finally` block" b
try:
	${1:${VISUAL:# TODO: try block}}
except$2:
	${3:# TODO: Handle exceptions.}
finally:
	${4:# TODO: Do something before leaving.}
$0
endsnippet
###


# comment
snippet todo "Add a TODO" b
# TODO: ${1:Something to be done}, since `!v strftime("%Y-%m-%d")`
endsnippet

snippet fixme "Add a FIXME" b
# FIXME: ${1:Bug description}, since `!v strftime("%Y-%m-%d")`
endsnippet

snippet xxx "Add a XXX" b
# XXX: ${1:Something weird or unsure}, since `!v strftime("%Y-%m-%d")`
endsnippet
###


